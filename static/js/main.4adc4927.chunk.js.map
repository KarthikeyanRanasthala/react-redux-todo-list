{"version":3,"sources":["redux/reducer.js","redux/actionTypes.js","components/TodoInput.js","redux/actions.js","components/TodoListTab.js","components/TodoNav.js","App.js","index.js"],"names":["initState","savedItems","todoReducer","state","action","type","item","content","isChecked","temp","map","ele","index","id","editing","filter","TodoInput","props","handleInput","e","setState","value","target","handleSubmit","preventDefault","handleAddItem","onSubmit","Grid","container","spacing","justify","alignItems","md","TextField","label","margin","variant","this","onChange","Button","color","size","style","marginTop","marginLeft","React","Component","connect","dispatch","addItem","toggleFunction","toggleItem","deleteFunction","deleteItem","List","role","hidden","Number","i","decor","textDecoration","ListItem","dense","button","key","ListItemIcon","Checkbox","edge","checked","ListItemText","primary","ListItemSecondaryAction","IconButton","onClick","TodoNav","handleChange","val","xs","AppBar","position","Tabs","indicatorColor","textColor","Tab","App","Container","Divider","store","createStore","todoStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4adc4927.chunk.js","sourcesContent":["import { ADD_ITEM, TOGGLE_ITEM, DELETE_ITEM } from './actionTypes';\n\nconst initState = {\n    savedItems: [],\n}\n\nconst todoReducer = (state = initState, action) => {\n    switch (action.type) {\n        case ADD_ITEM: {\n            return { savedItems: [...state.savedItems, { item: action.content, isChecked: false }] }\n        }\n        case TOGGLE_ITEM: {\n            let temp = state.savedItems.map((ele, index) => {\n                if(index === action.id) {\n                    return { ...ele, isChecked: !ele.isChecked }\n                }\n                else return ele;\n            })\n            return { savedItems: temp, editing: '' }\n        }\n        case DELETE_ITEM: {\n            let temp = state.savedItems.filter((ele, index) => index !== action.id);\n            return { savedItems: temp, editing: '' }\n        }\n        default: return state;\n    }\n}\n\nexport default todoReducer;","const ADD_ITEM = 'ADD_ITEM';\nconst TOGGLE_ITEM = 'TOGGLE_ITEM';\nconst EDIT_ITEM = 'EDIT_ITEM';\nconst DELETE_ITEM = 'DELETE_ITEM';\n\nexport { ADD_ITEM, TOGGLE_ITEM , EDIT_ITEM, DELETE_ITEM};","import React from 'react';\n\nimport { connect } from 'react-redux';\nimport { addItem } from '../redux/actions'\n\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nimport SaveIcon from '@material-ui/icons/Save';\n\nclass TodoInput extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: '',\n        }\n    }\n\n    handleInput = e => {\n        this.setState({value: e.target.value})\n    }\n\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.handleAddItem(this.state.value);\n        this.setState({value: ''});\n    }\n\n    render() {\n        return (\n            <form onSubmit={e => this.handleSubmit(e, this.state.value)}>\n                <Grid container spacing={3} justify='center' alignItems='center'>\n                    <Grid item md={3}>\n                        <TextField \n                            id='outlined-name' \n                            label='Enter ToDo Item' \n                            margin='normal' \n                            variant='outlined' \n                            value={this.state.value} \n                            onChange={this.handleInput} \n                        />\n                    </Grid>\n                    <Grid item md={1}>\n                        <Button \n                            variant='contained' \n                            color='primary' \n                            size='large' \n                            style={{marginTop: '5px'}} \n                            type='submit'\n                        >\n                            Save\n                            <SaveIcon style={{marginLeft: '8px'}} />\n                        </Button>\n                    </Grid>\n                </Grid>\n            </form>\n        )\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return ({\n        handleAddItem: (content) => {\n            dispatch(addItem(content))\n        }\n    })\n}\n\nexport default connect(null, mapDispatchToProps)(TodoInput);","import { ADD_ITEM, TOGGLE_ITEM, EDIT_ITEM, DELETE_ITEM } from './actionTypes';\n\nconst addItem = content => ({\n    type: ADD_ITEM,\n    content\n})\n\nconst toggleItem = id => ({\n    type: TOGGLE_ITEM,\n    id\n})\n\nconst editItem = id => ({\n    type: EDIT_ITEM,\n    id\n})\n\nconst deleteItem = id => ({\n    type: DELETE_ITEM,\n    id\n})\n\nexport { addItem, toggleItem, editItem, deleteItem };","import React from 'react';\n\nimport { connect } from 'react-redux';\n\nimport { toggleItem, deleteItem } from '../redux/actions'\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nconst TodoListTab = props => {\n    let temp;\n\n    if(props.filter === 'All') {\n        temp = props.savedItems;\n    }\n    else if(props.filter === 'Pending') {\n        temp = props.savedItems.filter(ele => !ele.isChecked);\n    }\n    else if(props.filter === 'Finished') {\n        temp = props.savedItems.filter(ele => ele.isChecked);\n    }\n    \n    return(\n        <List role='tabpanel' hidden={props.value !== Number(props.index)}>\n            {temp.map((ele, i) => {\n                let decor;\n                \n                if(ele.isChecked) {\n                    decor = { textDecoration: 'line-through' }\n                }\n                else decor = { textDecoration: 'none' }\n                \n                return (\n                    <ListItem \n                        dense \n                        button \n                        onChange={(e) => props.toggleFunction(e,i)} \n                        key={ele.item}\n                    >\n                        <ListItemIcon>\n                            <Checkbox edge='start' checked={ele.isChecked} />\n                        </ListItemIcon>\n                        <ListItemText primary={ele.item} style={decor} />\n                        <ListItemSecondaryAction>        \n                            <IconButton \n                                edge='end' \n                                onClick={(e) => {props.deleteFunction(e,i)}}\n                            >\n                                <DeleteIcon />\n                            </IconButton>\n                        </ListItemSecondaryAction>\n                    </ListItem>\n                )\n            })}\n        </List>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        savedItems: state.savedItems\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return ({\n        toggleFunction: (e, id) => {\n            dispatch(toggleItem(id))\n        },\n        deleteFunction: (e, id) => {\n            dispatch(deleteItem(id))\n        }\n    })\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoListTab);","import React from 'react';\n\nimport { connect } from 'react-redux';\n\nimport Grid from '@material-ui/core/Grid'\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nimport TodoListTab from './TodoListTab';\n\nclass TodoNav extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            value: 0\n        }\n    }\n\n    handleChange = (e,val) => {\n        this.setState({value: val});\n    }\n\n    render() {\n        return (\n            <Grid container justify='center'>\n                <Grid item md={5} xs={12}>\n                    <AppBar position='static' color='default'>\n                        <Tabs \n                            value={this.state.value}\n                            onChange={this.handleChange}\n                            indicatorColor='primary'\n                            textColor='primary'\n                            variant='fullWidth'\n                        >\n                            <Tab label='All' />\n                            <Tab label='Pending' />\n                            <Tab label='Finished' />\n                        </Tabs>\n                    </AppBar>\n                    <TodoListTab value={this.state.value} index='0' filter='All' />\n                    <TodoListTab value={this.state.value} index='1' filter='Pending' />\n                    <TodoListTab value={this.state.value} index='2' filter='Finished'/>\n                </Grid>\n            </Grid>\n        )\n    }\n}\n\nexport default connect(null, null)(TodoNav);","import React from 'react';\n\nimport Container from '@material-ui/core/Container';\nimport Divider from '@material-ui/core/Divider';\n\nimport TodoInput from './components/TodoInput';\nimport TodoNav from './components/TodoNav';\n\nconst App = () => {\n    return (\n        <Container>\n            <TodoInput />\n            <Divider style={{margin: '30px 0px'}} />\n            <TodoNav />\n        </Container>\n    )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\n\nimport todoStore from './redux/reducer';\n\nimport App from './App';\n\nconst store = createStore(todoStore);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n    , document.getElementById('root'));"],"sourceRoot":""}